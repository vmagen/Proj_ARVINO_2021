{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmage\\\\OneDrive\\\\Ruppin\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\Proj_July_RN\\\\FunctionalComponents\\\\FCEventsContainer.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-elements';\nimport FCSearch from \"./FCSearch\";\nimport headers from \"../helpers/messages.json\";\nimport styleSheet from \"../Pages/PageStyle\";\nimport FCHeader from \"./FCHeader\";\nimport FCEvents from \"./FCEvents\";\nimport FCEvent from \"./FCEvent\";\nimport helpers from \"../helpers/helperFunctions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nexport default function FCEventsContainer() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showSingle = _useState2[0],\n      setShowSingle = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      events = _useState4[0],\n      setEvents = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loaded = _useState6[0],\n      setIsLoaded = _useState6[1];\n\n  useEffect(function () {\n    getAllEvents();\n  }, []);\n\n  var _useState7 = useState({\n    id: 0,\n    name: '',\n    description: '',\n    date: '',\n    picture: '',\n    price: '',\n    ticketsLeft: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      event = _useState8[0],\n      setEvent = _useState8[1];\n\n  var toggleShow = function toggleShow() {\n    setShowSingle(!showSingle);\n  };\n\n  var SetSingleEvent = function SetSingleEvent(event) {\n    setEvent({\n      id: event.eventId,\n      name: event.eventName,\n      date: event.eventDate,\n      time: event.startTime,\n      picture: event.eventImgPath,\n      description: event.content,\n      price: event.price,\n      ticketsLeft: event.participantsAmount\n    });\n  };\n\n  function getAllEvents() {\n    fetch(helpers.getApi() + '/Event/GetAllEvents', {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setEvents(result);\n      setIsLoaded(true);\n    }, function (error) {\n      console.log(\"err post=\", error);\n    });\n  }\n\n  if (loaded) {\n    return React.createElement(View, {\n      style: styleSheet.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, React.createElement(FCHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      h4: true,\n      style: styleSheet.h4Text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, headers.upcomingEvents), React.createElement(FCSearch, {\n      placeholder: headers.searchEvents,\n      type: headers.event,\n      data: events,\n      loaded: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), showSingle ? React.createElement(FCEvents, {\n      toggleShow: toggleShow,\n      events: events,\n      setSingleEvent: SetSingleEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }) : React.createElement(FCEvent, {\n      toggleShow: toggleShow,\n      event: event,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }));\n  } else {\n    return React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#691A1A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/Proj_July_RN/FunctionalComponents/FCEventsContainer.js"],"names":["React","useState","useEffect","Text","FCSearch","headers","styleSheet","FCHeader","FCEvents","FCEvent","helpers","FCEventsContainer","showSingle","setShowSingle","events","setEvents","loaded","setIsLoaded","getAllEvents","id","name","description","date","picture","price","ticketsLeft","event","setEvent","toggleShow","SetSingleEvent","eventId","eventName","eventDate","time","startTime","eventImgPath","content","participantsAmount","fetch","getApi","method","Headers","then","res","json","result","error","console","log","container","h4Text","upcomingEvents","searchEvents"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View } from 'react-native'\r\nimport { Text } from 'react-native-elements';\r\nimport FCSearch from './FCSearch';\r\nimport headers from '../helpers/messages.json';\r\nimport styleSheet from '../Pages/PageStyle';\r\nimport FCHeader from './FCHeader';\r\nimport FCEvents from './FCEvents';\r\nimport FCEvent from './FCEvent';\r\nimport helpers from '../helpers/helperFunctions';\r\nimport { ActivityIndicator } from 'react-native';\r\n\r\nexport default function FCEventsContainer() {\r\n  const [showSingle, setShowSingle] = useState(true);\r\n  const [events, setEvents] = useState([]);\r\n  const [loaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getAllEvents();\r\n  }, []);\r\n\r\n  const [event, setEvent] = useState({\r\n    id: 0,\r\n    name: '',\r\n    description: '',\r\n    date: '',\r\n    picture: '',\r\n    price: '',\r\n    ticketsLeft: ''\r\n  });\r\n\r\n  const toggleShow = () => {\r\n    setShowSingle(!showSingle);\r\n  }\r\n\r\n  const SetSingleEvent = (event) => {\r\n    setEvent({\r\n      id: event.eventId,\r\n      name: event.eventName,\r\n      date: event.eventDate,\r\n      time: event.startTime,\r\n      picture: event.eventImgPath,\r\n      description: event.content,\r\n      price: event.price,\r\n      ticketsLeft: event.participantsAmount\r\n    })\r\n\r\n  }\r\n  function getAllEvents() {\r\n    fetch(helpers.getApi() + '/Event/GetAllEvents',\r\n      {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json; charset=UTF-8',\r\n          'Accept': 'application/json; charset=UTF-8',\r\n        })\r\n      })\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(\r\n        (result) => {\r\n          setEvents(result);\r\n          setIsLoaded(true);\r\n        },\r\n        (error) => {\r\n          console.log(\"err post=\", error);\r\n        });\r\n  }\r\n\r\n  if (loaded) {\r\n    return (\r\n      <View style={styleSheet.container}>\r\n        <FCHeader />\r\n        <Text h4 style={styleSheet.h4Text}>{headers.upcomingEvents}</Text>\r\n        <FCSearch placeholder={headers.searchEvents} type={headers.event} data={events} loaded={false} />\r\n        {showSingle ?\r\n          <FCEvents toggleShow={toggleShow} events={events} setSingleEvent={SetSingleEvent} />\r\n          :\r\n          <FCEvent toggleShow={toggleShow} event={event} />}\r\n      </View>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <ActivityIndicator size='large' color='#691A1A' />\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
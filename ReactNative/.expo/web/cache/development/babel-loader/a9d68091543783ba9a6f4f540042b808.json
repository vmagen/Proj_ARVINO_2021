{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\vmage\\\\OneDrive\\\\Ruppin\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\Proj_July_RN\\\\Componenets\\\\AuthContext.js\";\n\nimport React, { createContext, useState, useEffect, useRef } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport helpers from \"../helpers/helperFunctions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport messages from \"../helpers/messages.json\";\nimport * as Notifications from 'expo-notifications';\nimport Constants from 'expo-constants';\nimport { useNavigation } from '@react-navigation/native';\nvar userIcon = 'https://proj.ruppin.ac.il/bgroup15/prod/FinalPics/user.jpg';\nexport var AuthContext = createContext();\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true,\n              shouldPlaySound: false,\n              shouldSetBadge: false\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\n\nvar AuthContextProvider = function AuthContextProvider(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      authenticated = _useState2[0],\n      setAuthenticated = _useState2[1];\n\n  var _useState3 = useState({\n    picture: userIcon,\n    name: '',\n    password: '',\n    email: '',\n    token: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var userToken = 'r';\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      expoPushToken = _useState6[0],\n      setExpoPushToken = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      notification = _useState8[0],\n      setNotification = _useState8[1];\n\n  var notificationListener = useRef();\n  var responseListener = useRef();\n  useEffect(function () {\n    retrieveData();\n    updateNotificationToken();\n  }, [authenticated]);\n\n  var updateNotificationToken = function updateNotificationToken() {\n    var myToken;\n    return _regeneratorRuntime.async(function updateNotificationToken$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(registerForPushNotificationsAsync().then(function (token) {\n              return setExpoPushToken(token);\n            }));\n\n          case 2:\n            myToken = _context2.sent;\n            notificationListener.current = Notifications.addNotificationReceivedListener(function (notification) {\n              setNotification(notification);\n            });\n            responseListener.current = Notifications.addNotificationResponseReceivedListener(function (response) {\n              console.log(\"TOKEN\", myToken);\n            });\n            return _context2.abrupt(\"return\", function () {\n              Notifications.removeNotificationSubscription(notificationListener.current);\n              Notifications.removeNotificationSubscription(responseListener.current);\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function registerForPushNotificationsAsync() {\n    var token, _await$Notifications$, existingStatus, finalStatus, _await$Notifications$2, status;\n\n    return _regeneratorRuntime.async(function registerForPushNotificationsAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!Constants.isDevice) {\n              _context3.next = 22;\n              break;\n            }\n\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(Notifications.getPermissionsAsync());\n\n          case 3:\n            _await$Notifications$ = _context3.sent;\n            existingStatus = _await$Notifications$.status;\n            finalStatus = existingStatus;\n\n            if (!(existingStatus !== 'granted')) {\n              _context3.next = 12;\n              break;\n            }\n\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(Notifications.requestPermissionsAsync());\n\n          case 9:\n            _await$Notifications$2 = _context3.sent;\n            status = _await$Notifications$2.status;\n            finalStatus = status;\n\n          case 12:\n            if (!(finalStatus !== 'granted')) {\n              _context3.next = 15;\n              break;\n            }\n\n            alert('Failed to get push token for push notification!');\n            return _context3.abrupt(\"return\");\n\n          case 15:\n            _context3.next = 17;\n            return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n          case 17:\n            token = _context3.sent.data;\n            userToken = token;\n            console.log(\"TOKEN 3\", userToken);\n            _context3.next = 23;\n            break;\n\n          case 22:\n            alert('Must use physical device for Push Notifications');\n\n          case 23:\n            if (Platform.OS === 'android') {\n              Notifications.setNotificationChannelAsync('default', {\n                name: 'default',\n                importance: Notifications.AndroidImportance.MAX,\n                vibrationPattern: [0, 250, 250, 250],\n                lightColor: '#FF231F7C'\n              });\n            }\n\n            return _context3.abrupt(\"return\", token);\n\n          case 25:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var retrieveData = function retrieveData() {\n    var value, data;\n    return _regeneratorRuntime.async(function retrieveData$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('login'));\n\n          case 3:\n            value = _context4.sent;\n\n            if (!(value !== null)) {\n              _context4.next = 10;\n              break;\n            }\n\n            _context4.next = 7;\n            return _regeneratorRuntime.awrap(JSON.parse(value));\n\n          case 7:\n            data = _context4.sent;\n            setUser({\n              name: data.Name,\n              picture: data.picture,\n              email: data.email,\n              token: data.token\n            });\n            setAuthenticated(true);\n\n          case 10:\n            _context4.next = 15;\n            break;\n\n          case 12:\n            _context4.prev = 12;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log('Not login');\n\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  var login = function login(myEmail, myPassword) {\n    var res, data;\n    return _regeneratorRuntime.async(function login$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(fetch(helpers.getApi() + '/user/email?email=' + myEmail));\n\n          case 2:\n            res = _context5.sent;\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 5:\n            data = _context5.sent;\n\n            if (data != null) {\n              if (data.password === myPassword) {\n                AsyncStorage.setItem('login', JSON.stringify(data));\n                setUser({\n                  name: data.Name,\n                  picture: data.picture,\n                  email: myEmail,\n                  token: data.token\n                });\n\n                (function () {\n                  setAuthenticated(true);\n                });\n              }\n            }\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var logout = function logout() {\n    AsyncStorage.removeItem('login');\n    setAuthenticated(false);\n    setUser({\n      picture: userIcon,\n      name: '',\n      email: '',\n      token: ''\n    });\n  };\n\n  var addtoDB = function addtoDB(name, password, email, picture) {\n    var newUser;\n    return _regeneratorRuntime.async(function addtoDB$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            newUser = {\n              \"Name\": name,\n              \"password\": password,\n              \"email\": email,\n              \"isOlder\": true,\n              \"picture\": picture,\n              \"typeId\": 3,\n              \"token\": userToken\n            };\n            console.log(\"NEW USER\", newUser);\n            _context6.next = 4;\n            return _regeneratorRuntime.awrap(fetch(helpers.getApi() + '/User', {\n              method: 'POST',\n              body: JSON.stringify(newUser),\n              headers: new Headers({\n                'Content-Type': 'application/json; charset=UTF-8',\n                'Accept': 'application/json; charset=UTF-8'\n              })\n            }).then(function (res) {\n              setAuthenticated(true);\n              setUser({\n                name: name,\n                picture: picture,\n                email: email,\n                token: userToken\n              });\n              AsyncStorage.setItem('login', JSON.stringify(newUser));\n              return JSON.stringify(res);\n            }, function (error) {\n              alert(error);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var facebookLogin = function facebookLogin(name, password, email, picture) {\n    var res, data;\n    return _regeneratorRuntime.async(function facebookLogin$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return _regeneratorRuntime.awrap(fetch(helpers.getApi() + '/user/email?email=' + email));\n\n          case 3:\n            res = _context7.sent;\n            _context7.next = 6;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 6:\n            data = _context7.sent;\n\n            if (data != null) {\n              AsyncStorage.setItem('login', JSON.stringify(data));\n              setUser({\n                name: name,\n                password: password,\n                picture: picture,\n                email: email,\n                token: userToken\n              });\n              setAuthenticated(true);\n            } else {\n              addtoDB(name, password, email, picture);\n            }\n\n            _context7.next = 13;\n            break;\n\n          case 10:\n            _context7.prev = 10;\n            _context7.t0 = _context7[\"catch\"](0);\n            alert(\"Error in FB login!\");\n\n          case 13:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      authenticated: authenticated,\n      retrieveData: retrieveData,\n      user: user,\n      login: login,\n      logout: logout,\n      addtoDB: addtoDB,\n      facebookLogin: facebookLogin\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthContextProvider;","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/Proj_July_RN/Componenets/AuthContext.js"],"names":["React","createContext","useState","useEffect","useRef","AsyncStorage","helpers","messages","Notifications","Constants","useNavigation","userIcon","AuthContext","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","AuthContextProvider","props","authenticated","setAuthenticated","picture","name","password","email","token","user","setUser","userToken","expoPushToken","setExpoPushToken","notification","setNotification","notificationListener","responseListener","retrieveData","updateNotificationToken","registerForPushNotificationsAsync","then","myToken","current","addNotificationReceivedListener","addNotificationResponseReceivedListener","response","console","log","removeNotificationSubscription","isDevice","getPermissionsAsync","existingStatus","status","finalStatus","requestPermissionsAsync","alert","getExpoPushTokenAsync","data","Platform","OS","setNotificationChannelAsync","importance","AndroidImportance","MAX","vibrationPattern","lightColor","getItem","value","JSON","parse","Name","login","myEmail","myPassword","fetch","getApi","res","json","setItem","stringify","logout","removeItem","addtoDB","newUser","method","body","headers","Headers","error","facebookLogin","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect, useRef } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport helpers from '../helpers/helperFunctions';\r\nimport { Alert } from 'react-native';\r\nimport messages from '../helpers/messages.json';\r\nimport * as Notifications from 'expo-notifications';\r\nimport Constants from 'expo-constants';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n\r\nconst userIcon = 'https://proj.ruppin.ac.il/bgroup15/prod/FinalPics/user.jpg'\r\n\r\nexport const AuthContext = createContext();\r\n\r\nNotifications.setNotificationHandler({\r\n  handleNotification: async () => ({\r\n    shouldShowAlert: true,\r\n    shouldPlaySound: false,\r\n    shouldSetBadge: false,\r\n  }),\r\n});\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const [user, setUser] = useState({\r\n    picture: userIcon,\r\n    name: '',\r\n    password: '',\r\n    email: '',\r\n    token: ''\r\n  });\r\n  let userToken = 'r';\r\n  const [expoPushToken, setExpoPushToken] = useState('');\r\n  const [notification, setNotification] = useState(false);\r\n  const notificationListener = useRef();\r\n  const responseListener = useRef();\r\n\r\n  useEffect(() => {\r\n    retrieveData();\r\n    updateNotificationToken();\r\n  }, [authenticated])\r\n\r\n  const updateNotificationToken = async () => {\r\n    const myToken = await registerForPushNotificationsAsync().then(token => setExpoPushToken(token));\r\n\r\n    notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\r\n      setNotification(notification);\r\n    });\r\n\r\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\r\n\r\n      console.log(\"TOKEN\", myToken);\r\n    });\r\n    return () => {\r\n      Notifications.removeNotificationSubscription(notificationListener.current);\r\n      Notifications.removeNotificationSubscription(responseListener.current);\r\n    };\r\n  }\r\n\r\n\r\n  async function registerForPushNotificationsAsync() {\r\n    let token;\r\n    if (Constants.isDevice) {\r\n      const { status: existingStatus } = await Notifications.getPermissionsAsync();\r\n      let finalStatus = existingStatus;\r\n      if (existingStatus !== 'granted') {\r\n        const { status } = await Notifications.requestPermissionsAsync();\r\n        finalStatus = status;\r\n      }\r\n      if (finalStatus !== 'granted') {\r\n        alert('Failed to get push token for push notification!');\r\n        return;\r\n      }\r\n      token = (await Notifications.getExpoPushTokenAsync()).data;\r\n      userToken = token;\r\n      console.log(\"TOKEN 3\", userToken);\r\n    } else {\r\n      alert('Must use physical device for Push Notifications');\r\n    }\r\n\r\n    if (Platform.OS === 'android') {\r\n      Notifications.setNotificationChannelAsync('default', {\r\n        name: 'default',\r\n        importance: Notifications.AndroidImportance.MAX,\r\n        vibrationPattern: [0, 250, 250, 250],\r\n        lightColor: '#FF231F7C',\r\n      });\r\n    }\r\n\r\n    return token;\r\n  }\r\n\r\n\r\n  const retrieveData = async () => {\r\n    try {\r\n      const value = await AsyncStorage.getItem('login');\r\n      if (value !== null) {\r\n        const data = await JSON.parse(value);\r\n        setUser({\r\n          name: data.Name,\r\n          picture: data.picture,\r\n          email: data.email,\r\n          token: data.token\r\n        });\r\n        setAuthenticated(true);\r\n        //  console.log(\"ASYNC USER\", user);\r\n      }\r\n    } catch (error) {\r\n      console.log('Not login')\r\n    }\r\n  };\r\n\r\n\r\n  const login = async (myEmail, myPassword) => {\r\n    const res = await fetch(helpers.getApi() + '/user/email?email=' + myEmail);\r\n    const data = await res.json();\r\n    if (data != null) {\r\n      if (data.password === myPassword) {\r\n        AsyncStorage.setItem('login', JSON.stringify(data));\r\n        setUser({\r\n          name: data.Name,\r\n          picture: data.picture,\r\n          email: myEmail,\r\n          token: data.token\r\n        });\r\n        () => {\r\n          setAuthenticated(true)\r\n        }\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  const logout = () => {\r\n    AsyncStorage.removeItem('login');\r\n    setAuthenticated(false);\r\n    setUser({\r\n      picture: userIcon,\r\n      name: '',\r\n      email: '',\r\n      token: ''\r\n    })\r\n  }\r\n\r\n  const addtoDB = async (name, password, email, picture) => {\r\n    let newUser =\r\n    {\r\n      \"Name\": name,\r\n      \"password\": password,\r\n      \"email\": email,\r\n      \"isOlder\": true,\r\n      \"picture\": picture,\r\n      \"typeId\": 3,\r\n      \"token\": userToken\r\n    };\r\n    console.log(\"NEW USER\", newUser);\r\n\r\n    await fetch(helpers.getApi() + '/User',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify(newUser),\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json; charset=UTF-8',\r\n          'Accept': 'application/json; charset=UTF-8',\r\n        })\r\n      })\r\n      .then(res => {\r\n        setAuthenticated(true);\r\n        setUser({\r\n          name: name,\r\n          picture: picture,\r\n          email: email,\r\n          token: userToken\r\n        });\r\n\r\n        AsyncStorage.setItem('login', JSON.stringify(newUser));\r\n        return JSON.stringify(res);\r\n      }, (error) => {\r\n        alert(error);\r\n      })\r\n  }\r\n\r\n  const facebookLogin = async (name, password, email, picture) => {\r\n    try {\r\n      const res = await fetch(helpers.getApi() + '/user/email?email=' + email);\r\n      const data = await res.json();\r\n      if (data != null) {\r\n        AsyncStorage.setItem('login', JSON.stringify(data));\r\n        setUser({\r\n          name: name,\r\n          password: password,\r\n          picture: picture,\r\n          email: email,\r\n          token: userToken\r\n        });\r\n        setAuthenticated(true);\r\n      }\r\n      else {\r\n        addtoDB(name, password, email, picture);\r\n      }\r\n    }\r\n    catch {\r\n      alert(\"Error in FB login!\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authenticated, retrieveData, user, login, logout, addtoDB, facebookLogin }} >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthContextProvider;"]},"metadata":{},"sourceType":"module"}
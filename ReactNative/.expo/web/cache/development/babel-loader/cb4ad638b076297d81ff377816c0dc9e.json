{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\vmage\\\\OneDrive\\\\Ruppin\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\Proj_July_RN\\\\Componenets\\\\PrefrenceContext.js\";\n\nimport React, { createContext } from 'react';\nimport helpers from \"../helpers/helperFunctions\";\nexport var PrefContext = createContext();\n\nvar PrefContextProvider = function PrefContextProvider(props) {\n  var AddToDB = function AddToDB(email, prefrenceID, freeText) {\n    var newPrefrence;\n    return _regeneratorRuntime.async(function AddToDB$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            newPrefrence = {\n              \"email\": email,\n              \"PrefrenceID\": prefrenceID,\n              \"FreeText\": freeText\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(helpers.getApi() + '/UserPrefrence', {\n              method: 'POST',\n              body: JSON.stringify(newPrefrence),\n              headers: new Headers({\n                'Content-Type': 'application/json; charset=UTF-8',\n                'Accept': 'application/json; charset=UTF-8'\n              })\n            }).then(function (res) {\n              return JSON.stringify(res);\n            }, function (error) {\n              alert(error);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(PrefContext.Provider, {\n    value: {\n      AddToDB: AddToDB\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default PrefContextProvider;","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/Proj_July_RN/Componenets/PrefrenceContext.js"],"names":["React","createContext","helpers","PrefContext","PrefContextProvider","props","AddToDB","email","prefrenceID","freeText","newPrefrence","fetch","getApi","method","body","JSON","stringify","headers","Headers","then","res","error","alert","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,OAAP;AAEA,OAAO,IAAMC,WAAW,GAAGF,aAAa,EAAjC;;AAEP,IAAMG,mBAAmB,GAAE,SAArBA,mBAAqB,CAACC,KAAD,EAAU;AAEnC,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,KAAP,EAAcC,WAAd,EAA2BC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVC,YAAAA,YAFU,GAGd;AACE,uBAASH,KADX;AAEE,6BAAeC,WAFjB;AAGE,0BAAYC;AAHd,aAHc;AAAA;AAAA,6CAURE,KAAK,CAACT,OAAO,CAACU,MAAR,KAAmB,gBAApB,EACT;AACEC,cAAAA,MAAM,EAAE,MADV;AAEEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,YAAf,CAFR;AAGEO,cAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,gCAAgB,iCADG;AAEnB,0BAAU;AAFS,eAAZ;AAHX,aADS,CAAL,CASHC,IATG,CASE,UAAAC,GAAG,EAAI;AACX,qBAAOL,IAAI,CAACC,SAAL,CAAeI,GAAf,CAAP;AACD,aAXG,EAWD,UAACC,KAAD,EAAW;AACZC,cAAAA,KAAK,CAACD,KAAD,CAAL;AACD,aAbG,CAVQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AA2BA,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEf,MAAAA,OAAO,EAAPA;AAAF,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACkB,QADT,CADF;AAKD,CAlCD;;AAoCA,eAAenB,mBAAf","sourcesContent":["import React, { createContext } from 'react'\r\nimport helpers from '../helpers/helperFunctions';\r\n\r\nexport const PrefContext = createContext();\r\n\r\nconst PrefContextProvider= (props) =>{\r\n\r\n  const AddToDB = async (email, prefrenceID, freeText) => {\r\n    //console.log(\"WINEID\", data.wineId);\r\n    let newPrefrence =\r\n    {\r\n      \"email\": email,\r\n      \"PrefrenceID\": prefrenceID,\r\n      \"FreeText\": freeText,\r\n\r\n    };\r\n\r\n    await fetch(helpers.getApi() + '/UserPrefrence',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify(newPrefrence),\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json; charset=UTF-8',\r\n          'Accept': 'application/json; charset=UTF-8',\r\n        })\r\n      })\r\n      .then(res => {\r\n        return JSON.stringify(res);\r\n      }, (error) => {\r\n        alert(error);\r\n      })\r\n\r\n  }\r\n\r\n  return (\r\n    <PrefContext.Provider value={{ AddToDB }} >\r\n      {props.children}\r\n    </PrefContext.Provider>\r\n  )\r\n}\r\n\r\nexport default PrefContextProvider;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmage\\\\OneDrive\\\\Ruppin\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\Proj_July_RN\\\\FunctionalComponents\\\\FCEvents.js\";\nimport React, { useEffect, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Avatar, ListItem, Text } from 'react-native-elements';\nimport styleSheet from \"../Pages/PageStyle\";\nimport helpers from \"../helpers/helperFunctions\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useNavigation } from '@react-navigation/native';\nexport default function FCEvents(props) {\n  var _this = this;\n\n  var navigation = useNavigation();\n  return React.createElement(ScrollView, {\n    horizontal: false,\n    pagingEnabled: true,\n    showsVerticalScrollIndicator: false,\n    style: styleSheet.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, props.events.map(function (i) {\n    return React.createElement(ListItem, {\n      style: {\n        display: 'flex',\n        flex: 1,\n        justifyContent: 'flex-end'\n      },\n      key: i.eventId,\n      bottomDivider: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      name: \"clipboard-list-outline\",\n      color: \"black\",\n      size: 30,\n      onPress: function onPress() {\n        navigation.navigate('Login', {\n          screen: 'Event',\n          params: {\n            id: i.eventId,\n            name: i.eventName,\n            date: i.eventDate,\n            time: i.startTime,\n            picture: i.eventImgPath,\n            description: i.content,\n            price: i.price,\n            ticketsLeft: i.participantsAmount\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    })), React.createElement(ListItem.Content, {\n      style: {\n        justifyContent: 'flex-end'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, i.eventName), React.createElement(ListItem.Subtitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, helpers.ReturnDate(i.eventDate)), React.createElement(ListItem.Subtitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, i.startTime)), React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, React.createElement(Avatar, {\n      source: {\n        uri: i.eventImgPath\n      },\n      size: \"large\",\n      rounded: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    })));\n  }));\n}","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/Proj_July_RN/FunctionalComponents/FCEvents.js"],"names":["React","useEffect","useState","Avatar","ListItem","Text","styleSheet","helpers","MaterialCommunityIcons","useNavigation","FCEvents","props","navigation","container","events","map","i","display","flex","justifyContent","eventId","navigate","screen","params","id","name","eventName","date","eventDate","time","startTime","picture","eventImgPath","description","content","price","ticketsLeft","participantsAmount","ReturnDate","uri"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { ScrollView, Modal } from 'react-native';\r\nimport { Avatar, ListItem, Text } from 'react-native-elements';\r\nimport styleSheet from '../Pages/PageStyle';\r\nimport helpers from '../helpers/helperFunctions';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport default function FCEvents(props) {\r\n  const navigation = useNavigation();\r\n\r\n    return (\r\n        <ScrollView\r\n            horizontal={false}\r\n            pagingEnabled={true}\r\n            showsVerticalScrollIndicator={false}\r\n            style={styleSheet.container}\r\n        >\r\n            {props.events.map(i => (\r\n                <ListItem\r\n                    style={{ display: 'flex', flex: 1, justifyContent: 'flex-end' }}\r\n                    key={i.eventId} bottomDivider>\r\n                    <ListItem.Content >\r\n                        <MaterialCommunityIcons\r\n                            name=\"clipboard-list-outline\"\r\n                            color='black'\r\n                            size={30}\r\n                            onPress={() => {\r\n                                navigation.navigate('Login', {\r\n                                    screen: 'Event',\r\n                                    params: {\r\n                                        id: i.eventId,\r\n                                        name: i.eventName,\r\n                                        date: i.eventDate,\r\n                                        time: i.startTime,\r\n                                        picture: i.eventImgPath,\r\n                                        description: i.content,\r\n                                        price: i.price,\r\n                                        ticketsLeft: i.participantsAmount\r\n                                    }\r\n                                  });\r\n                      \r\n                            }}\r\n                        />\r\n                    </ListItem.Content>\r\n                    <ListItem.Content style={{ justifyContent: 'flex-end' }}>\r\n                        <ListItem.Title>{i.eventName}</ListItem.Title>\r\n                        <ListItem.Subtitle>{helpers.ReturnDate(i.eventDate)}</ListItem.Subtitle>\r\n                        <ListItem.Subtitle>{i.startTime}</ListItem.Subtitle>\r\n                    </ListItem.Content>\r\n                    <ListItem.Content>\r\n                        <Avatar\r\n                            source={{ uri: i.eventImgPath }}\r\n                            size='large'\r\n                            rounded={true} />\r\n                    </ListItem.Content>\r\n                </ListItem>\r\n            ))}\r\n        </ScrollView>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
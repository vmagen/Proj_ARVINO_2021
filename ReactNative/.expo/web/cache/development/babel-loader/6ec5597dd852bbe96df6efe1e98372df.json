{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmage\\\\OneDrive\\\\Ruppin\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\Proj_July_RN\\\\FunctionalComponents\\\\FCQuestionere1.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Text, Button } from 'react-native-elements';\nimport SwipeCards from \"react-native-swipe-cards-deck\";\nimport helpers from \"../helpers/helperFunctions\";\nimport messages from \"../helpers/messages.json\";\nimport myStyles from \"../Pages/PageStyle\";\nimport { useNavigation } from '@react-navigation/native';\nimport { PrefContext } from \"../Componenets/PrefrenceContext\";\n\nfunction Card(_ref) {\n  var data = _ref.data;\n  return React.createElement(View, {\n    style: [styles.card, {\n      backgroundColor: data.backgroundColor\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    h4: true,\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, messages.swipeLeftRight), React.createElement(Image, {\n    source: {\n      uri: data.wineImgPath\n    },\n    style: myStyles.wine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, data.wineName), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, data.wineryName));\n}\n\nfunction StatusCard(_ref2) {\n  var toShow = _ref2.toShow;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setshow = _useState2[1];\n\n  useEffect(function () {\n    setshow(toShow);\n  }, [show]);\n  var navigation = useNavigation();\n\n  var countinueToMainPage = function countinueToMainPage() {\n    navigation.push('waitPage');\n  };\n\n  if (show) {\n    return React.createElement(View, {\n      style: StyleSheet.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.cardsText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, messages.thankYou), React.createElement(Button, {\n      title: messages.countinue,\n      buttonStyle: myStyles.button,\n      onPress: countinueToMainPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }));\n  } else return React.createElement(View, {\n    style: StyleSheet.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.cardsText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, messages.prepareQuestions), React.createElement(Button, {\n    title: messages.skip,\n    buttonStyle: myStyles.button,\n    onPress: countinueToMainPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default function FCQuestionere1(props) {\n  var _this = this;\n\n  var _useContext = useContext(PrefContext),\n      AddToDB = _useContext.AddToDB;\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cards = _useState4[0],\n      setCards = _useState4[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      fetchData();\n    }, 3000);\n    return function cleanup() {\n      setCards([]);\n    };\n  }, []);\n\n  function fetchData() {\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(helpers.getApi() + '/RandomWines?numOfWines=3', {\n              method: 'GET',\n              headers: new Headers({\n                'Content-Type': 'application/json; charset=UTF-8',\n                'Accept': 'application/json; charset=UTF-8'\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (result) {\n              setCards(result);\n            }, function (error) {\n              console.log(\"err post=\", error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handleYup(card) {\n    console.log(\"Yup for \" + card.wineId);\n    AddToDB(props.route.params.email, 1, card.wineId);\n    return true;\n  }\n\n  function handleNope(card) {\n    console.log(\"Nope for \" + card.wineName);\n    return true;\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, cards ? React.createElement(SwipeCards, {\n    cards: cards,\n    renderCard: function renderCard(cardData) {\n      return React.createElement(Card, {\n        data: cardData,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(cardData) {\n      return String(cardData.wineId);\n    },\n    renderNoMoreCards: function renderNoMoreCards() {\n      return React.createElement(StatusCard, {\n        toShow: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 36\n        }\n      });\n    },\n    handleYup: handleYup,\n    handleNope: handleNope,\n    yupText: messages.know,\n    nopeText: messages.dontKnow,\n    showYup: true,\n    showNope: true,\n    containerStyle: {\n      mrginBottom: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }) : React.createElement(StatusCard, {\n    text: messages.prepareQuestions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  card: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 250,\n    height: 250,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#691A1A'\n  },\n  cardsText: {\n    fontSize: 22\n  }\n});","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/Proj_July_RN/FunctionalComponents/FCQuestionere1.js"],"names":["React","useEffect","useState","useContext","Text","Button","SwipeCards","helpers","messages","myStyles","useNavigation","PrefContext","Card","data","styles","card","backgroundColor","textAlign","swipeLeftRight","uri","wineImgPath","wine","wineName","wineryName","StatusCard","toShow","show","setshow","navigation","countinueToMainPage","push","StyleSheet","container","cardsText","thankYou","countinue","button","prepareQuestions","skip","FCQuestionere1","props","AddToDB","cards","setCards","setTimeout","fetchData","cleanup","fetch","getApi","method","headers","Headers","then","res","json","result","error","console","log","handleYup","wineId","route","params","email","handleNope","cardData","String","know","dontKnow","mrginBottom","create","flex","alignItems","justifyContent","width","height","borderWidth","borderStyle","borderColor","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { StyleSheet,  View, Image } from \"react-native\";\r\nimport { Text, Button } from 'react-native-elements'\r\nimport SwipeCards from \"react-native-swipe-cards-deck\";\r\nimport helpers from '../helpers/helperFunctions';\r\nimport messages from '../helpers/messages.json';\r\nimport myStyles from '../Pages/PageStyle';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { PrefContext } from \"../Componenets/PrefrenceContext\";\r\n\r\nfunction Card({ data }) {\r\n  return (\r\n    <View style={[styles.card, { backgroundColor: data.backgroundColor }]}>\r\n      <Text h4 style={{textAlign:'right'}}>{messages.swipeLeftRight}</Text>\r\n      <Image\r\n        source={{ uri: data.wineImgPath }}\r\n        style={myStyles.wine} />\r\n      <Text>{data.wineName}</Text>\r\n      <Text>{data.wineryName}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction StatusCard({ toShow }) {\r\n  const [show, setshow] = useState(false)\r\n\r\n  useEffect(() => {\r\n   setshow(toShow);\r\n  }, [show])\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const countinueToMainPage = () => {\r\n    navigation.push('waitPage');\r\n  }\r\n\r\n  if (show) {\r\n    return (\r\n      <View style={StyleSheet.container}>\r\n        <Text style={styles.cardsText}>{messages.thankYou}</Text>\r\n        <Button\r\n          title={messages.countinue}\r\n          buttonStyle={myStyles.button}\r\n          onPress={countinueToMainPage}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n  else\r\n    return (\r\n      <View style={StyleSheet.container}>\r\n        <Text style={styles.cardsText}>{messages.prepareQuestions}</Text>\r\n         <Button\r\n          title={messages.skip}\r\n          buttonStyle={myStyles.button}\r\n          onPress={countinueToMainPage}\r\n        />\r\n      </View>\r\n    )\r\n}\r\n\r\nexport default function FCQuestionere1(props) {\r\n  const {AddToDB} = useContext(PrefContext);\r\n  const [cards, setCards] = useState();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetchData();\r\n    }, 3000);\r\n\r\n    return function cleanup() {\r\n      // console.log('CLEANUP');\r\n      setCards([]);\r\n    }\r\n  }, []);\r\n\r\n  async function fetchData() {\r\n    await fetch(helpers.getApi() + '/RandomWines?numOfWines=3',\r\n      {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json; charset=UTF-8',\r\n          'Accept': 'application/json; charset=UTF-8',\r\n        })\r\n      })\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(\r\n        (result) => {\r\n          setCards(result);\r\n        },\r\n        (error) => {\r\n          console.log(\"err post=\", error);\r\n        });\r\n  }\r\n\r\n  function handleYup(card) {\r\n    console.log(`Yup for ${card.wineId}`);\r\n    AddToDB(props.route.params.email,1,  card.wineId,);\r\n    return true; // return false if you wish to cancel the action\r\n  }\r\n  function handleNope(card) {\r\n    console.log(`Nope for ${card.wineName}`);\r\n    return true;\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {cards ? (\r\n        <SwipeCards\r\n          cards={cards}\r\n          renderCard={(cardData) => <Card data={cardData} />}\r\n          keyExtractor={(cardData) => String(cardData.wineId)}\r\n          renderNoMoreCards={() => <StatusCard  toShow={true}/>}\r\n          handleYup={handleYup}\r\n          handleNope={handleNope}\r\n          yupText={messages.know}\r\n          nopeText={messages.dontKnow}\r\n          showYup\r\n          showNope\r\n          containerStyle={{mrginBottom: 200}}\r\n        />\r\n      ) : (\r\n        <StatusCard text={messages.prepareQuestions} />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  card: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: 250,\r\n    height: 250,\r\n    borderWidth: 1,\r\n    borderStyle: 'solid',\r\n    borderColor: '#691A1A'\r\n  },\r\n  cardsText: {\r\n    fontSize: 22,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}
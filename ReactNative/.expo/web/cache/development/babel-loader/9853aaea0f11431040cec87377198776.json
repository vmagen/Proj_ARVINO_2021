{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmage\\\\OneDrive\\\\Ruppin\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\Proj_July_RN\\\\FunctionalComponents\\\\FCFacebookLogin.js\";\nimport React, { useContext } from 'react';\nimport * as Facebook from 'expo-facebook';\nimport { Button, Icon } from 'react-native-elements';\nimport headers from \"../helpers/messages.json\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from \"../Componenets/AuthContext\";\n\nfunction FCFacebookLogin() {\n  var navigation = useNavigation();\n\n  var _useContext = useContext(AuthContext),\n      facebookLogin = _useContext.facebookLogin;\n\n  var getDetailsFromFB = function getDetailsFromFB() {\n    var user, password;\n    return _regeneratorRuntime.async(function getDetailsFromFB$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetchdata());\n\n          case 2:\n            user = _context.sent;\n            password = '12345678';\n            console.log(\"FB 1 : -----\", user.name, password, user.email, user.picture.data.url);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(facebookLogin(user.name, password, user.email, user.picture.data.url));\n\n          case 7:\n            navigation.navigate('Login', {\n              screen: 'questionere',\n              params: {\n                email: user.email\n              }\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function fetchdata() {\n    var _await$Facebook$logIn, type, token, response, userInfo, message;\n\n    return _regeneratorRuntime.async(function fetchdata$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Facebook.initializeAsync({\n              options: {\n                appId: '174194160927637',\n                appName: 'Arvino'\n              }\n            }));\n\n          case 3:\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(Facebook.logInWithReadPermissionsAsync({\n              permissions: ['public_profile', 'email']\n            }));\n\n          case 5:\n            _await$Facebook$logIn = _context2.sent;\n            type = _await$Facebook$logIn.type;\n            token = _await$Facebook$logIn.token;\n\n            if (!(type === 'success')) {\n              _context2.next = 18;\n              break;\n            }\n\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(fetch(\"https://graph.facebook.com/me?fields=id,name,email,picture.type(large)&access_token=\" + token));\n\n          case 11:\n            response = _context2.sent;\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 14:\n            userInfo = _context2.sent;\n            return _context2.abrupt(\"return\", userInfo);\n\n          case 18:\n            alert(\"Facebook Login cancel\");\n            type === 'cancel';\n\n          case 20:\n            _context2.next = 26;\n            break;\n\n          case 22:\n            _context2.prev = 22;\n            _context2.t0 = _context2[\"catch\"](0);\n            message = _context2.t0.message;\n            alert(\"Facebook Login Error: \" + message);\n\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 22]], Promise);\n  }\n\n  return React.createElement(Button, {\n    disabled: false,\n    title: headers.continueWithFb,\n    onPress: getDetailsFromFB,\n    style: {\n      width: 250,\n      alignSelf: 'center'\n    },\n    icon: React.createElement(Ionicons, {\n      name: \"logo-facebook\",\n      size: 26,\n      color: \"#3b5998\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default FCFacebookLogin;","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/Proj_July_RN/FunctionalComponents/FCFacebookLogin.js"],"names":["React","useContext","Facebook","Button","Icon","headers","Ionicons","useNavigation","AuthContext","FCFacebookLogin","navigation","facebookLogin","getDetailsFromFB","fetchdata","user","password","console","log","name","email","picture","data","url","navigate","screen","params","initializeAsync","options","appId","appName","logInWithReadPermissionsAsync","permissions","type","token","fetch","response","json","userInfo","alert","message","continueWithFb","width","alignSelf"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport * as Facebook from 'expo-facebook';\r\nimport { Button, Icon } from 'react-native-elements';\r\nimport headers from '../helpers/messages.json';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { AuthContext } from '../Componenets/AuthContext';\r\n\r\nfunction FCFacebookLogin() {\r\n  const navigation = useNavigation();\r\n  const { facebookLogin } = useContext(AuthContext);\r\n\r\n  const getDetailsFromFB = async () => {\r\n    const user = await fetchdata();\r\n    let password='12345678';\r\n    console.log(\"FB 1 : -----\", user.name, password, user.email, user.picture.data.url);\r\n    await facebookLogin(user.name, password, user.email, user.picture.data.url);\r\n    navigation.navigate('Login', {\r\n      screen: 'questionere', params: {\r\n        email: user.email\r\n      }\r\n    });\r\n  }\r\n\r\n  async function fetchdata() {\r\n    try {\r\n      await Facebook.initializeAsync({\r\n        options:\r\n        {\r\n          appId: '174194160927637',\r\n          appName: 'Arvino'\r\n        }\r\n      });\r\n      const { type, token }\r\n        = await Facebook.logInWithReadPermissionsAsync({\r\n          permissions: ['public_profile', 'email'],\r\n        });\r\n      if (type === 'success') {\r\n        // Get the user's name using Facebook's Graph API\r\n        const response = await fetch(`https://graph.facebook.com/me?fields=id,name,email,picture.type(large)&access_token=${token}`);\r\n        const userInfo = await response.json();\r\n        //add async and db\r\n        return userInfo;\r\n      } else {\r\n        alert(`Facebook Login cancel`);\r\n        type === 'cancel'\r\n      }\r\n    } catch ({ message }) {\r\n      alert(`Facebook Login Error: ${message}`);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Button\r\n      disabled={false}\r\n      title={headers.continueWithFb}\r\n      onPress={getDetailsFromFB}\r\n      style={{ width: 250, alignSelf: 'center' }}\r\n      icon={\r\n        <Ionicons\r\n          name=\"logo-facebook\"\r\n          size={26}\r\n          color=\"#3b5998\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\n\r\nexport default FCFacebookLogin;\r\n"]},"metadata":{},"sourceType":"module"}
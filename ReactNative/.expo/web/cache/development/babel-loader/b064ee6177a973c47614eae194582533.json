{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmage\\\\OneDrive\\\\Ruppin\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\Proj_July_RN\\\\FunctionalComponents\\\\FCLikes.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { Avatar } from 'react-native-elements';\nimport { AuthContext } from \"../Componenets/AuthContext\";\nimport helpers from \"../helpers/helperFunctions\";\nimport uuid from 'react-native-uuid';\nexport default function FCLikes(props) {\n  var _this = this;\n\n  var iconNotPressed = 'wine-outline';\n  var iconPressed = 'wine';\n\n  var _useState = useState(iconNotPressed),\n      _useState2 = _slicedToArray(_useState, 2),\n      iconName = _useState2[0],\n      setIconName = _useState2[1];\n\n  var _useState3 = useState(props.likes),\n      _useState4 = _slicedToArray(_useState3, 2),\n      entityLikes = _useState4[0],\n      setEntityLike = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      likesToView = _useState6[0],\n      setLikesToView = _useState6[1];\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user,\n      authenticated = _useContext.authenticated;\n\n  useEffect(function () {\n    setLikesToView(entityLikes.slice(0, 6));\n    var obj = entityLikes.find(function (i) {\n      return i.userName == user.name;\n    });\n\n    if (obj !== undefined) {\n      setIconName(iconPressed);\n    }\n  }, [entityLikes]);\n\n  var likeAllowed = function likeAllowed() {\n    return _regeneratorRuntime.async(function likeAllowed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!authenticated) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(postLike());\n\n          case 3:\n            _context.next = 6;\n            break;\n\n          case 5:\n            alert(\"need login\");\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var postLike = function postLike() {\n    var newLike;\n    return _regeneratorRuntime.async(function postLike$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            newLike = {\n              \"userEmail\": user.email,\n              \"entityType\": props.entityType,\n              \"entityId\": props.entityId\n            };\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(helpers.getApi() + '/Likes/PostLikeToEntity', {\n              method: 'POST',\n              body: JSON.stringify(newLike),\n              headers: new Headers({\n                'Content-Type': 'application/json; charset=UTF-8',\n                'Accept': 'application/json; charset=UTF-8'\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (result) {\n              setIconName(iconPressed);\n              var newLike = {\n                id: result,\n                userImage: user.picture,\n                username: user.Name\n              };\n              setEntityLike(function (entityLikes) {\n                return [].concat(_toConsumableArray(entityLikes), [newLike]);\n              });\n            }).then(function () {}, function (error) {\n              console.log(\"err post=\", error);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var position = -15;\n  return React.createElement(View, {\n    key: uuid.v4(),\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignSelf: 'flex-start',\n      marginLeft: 20,\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(Ionicons, {\n    name: iconName,\n    size: 25,\n    color: \"#691A1A\",\n    onPress: function onPress() {\n      if (iconName == iconNotPressed) {\n        likeAllowed();\n      } else {}\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginTop: 7,\n      fontWeight: 'bold',\n      color: '#691A1A'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, entityLikes.length > 0 ? '+' + entityLikes.length : null), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, likesToView.map(function (like) {\n    position += 20;\n    return React.createElement(View, {\n      key: like.likeId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, React.createElement(Avatar, {\n      rounded: true,\n      size: \"small\",\n      source: {\n        uri: like.userImage\n      },\n      containerStyle: {\n        position: 'absolute',\n        left: position,\n        borderColor: '#F0E6E8',\n        borderWidth: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }));\n  })));\n}","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/Proj_July_RN/FunctionalComponents/FCLikes.js"],"names":["React","useEffect","useState","useContext","Ionicons","Avatar","AuthContext","helpers","uuid","FCLikes","props","iconNotPressed","iconPressed","iconName","setIconName","likes","entityLikes","setEntityLike","likesToView","setLikesToView","user","authenticated","slice","obj","find","i","userName","name","undefined","likeAllowed","postLike","alert","newLike","email","entityType","entityId","fetch","getApi","method","body","JSON","stringify","headers","Headers","then","res","json","result","id","userImage","picture","username","Name","error","console","log","position","v4","flexDirection","justifyContent","alignSelf","marginLeft","marginBottom","marginTop","fontWeight","color","length","map","like","likeId","uri","left","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\r\nimport { View, Text } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Avatar } from 'react-native-elements';\r\nimport { AuthContext } from '../Componenets/AuthContext';\r\nimport helpers from '../helpers/helperFunctions';\r\nimport uuid from 'react-native-uuid';\r\n\r\nexport default function FCLikes(props) {\r\n  const iconNotPressed = 'wine-outline';\r\n  const iconPressed = 'wine';\r\n\r\n  const [iconName, setIconName] = useState(iconNotPressed);\r\n  const [entityLikes, setEntityLike] = useState(props.likes);\r\n  const [likesToView, setLikesToView] = useState([]);\r\n  const { user, authenticated } = useContext(AuthContext)\r\n\r\n  useEffect(() => {\r\n    setLikesToView(entityLikes.slice(0, 6));\r\n    let obj = entityLikes.find(i => i.userName == user.name);\r\n    if (obj !== undefined) {\r\n      setIconName(iconPressed);\r\n    }\r\n  }, [entityLikes])\r\n\r\n\r\n  const likeAllowed = async () => {\r\n    if (authenticated)\r\n      await postLike();\r\n    else\r\n      alert(\"need login\");\r\n  }\r\n  const postLike = async () => {\r\n    let newLike =\r\n    {\r\n      \"userEmail\": user.email,\r\n      \"entityType\": props.entityType,\r\n      \"entityId\": props.entityId,\r\n\r\n    };\r\n    await fetch(helpers.getApi() + '/Likes/PostLikeToEntity',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify(newLike),\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json; charset=UTF-8',\r\n          'Accept': 'application/json; charset=UTF-8',\r\n        })\r\n      })\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(\r\n        (result) => {\r\n          setIconName(iconPressed);\r\n          let newLike = {\r\n            id: result,\r\n            userImage: user.picture,\r\n            username: user.Name\r\n          }\r\n          setEntityLike(entityLikes => [...entityLikes, newLike]);\r\n        })\r\n      .then(\r\n        () => { }\r\n        ,\r\n        (error) => {\r\n          console.log(\"err post=\", error);\r\n        });\r\n\r\n  }\r\n\r\n\r\n  let position = -15;\r\n  return (\r\n    <View key={uuid.v4()} style={{ flexDirection: 'row', justifyContent: 'center', alignSelf: 'flex-start', marginLeft: 20, marginBottom: 20 }} >\r\n      <Ionicons\r\n        name={iconName}\r\n        size={25}\r\n        color=\"#691A1A\"\r\n        onPress={() => {\r\n          if (iconName == iconNotPressed) {\r\n            likeAllowed();\r\n          }\r\n          else {\r\n            //removeLike\r\n          }\r\n        }} />\r\n      <Text style={{ marginTop: 7, fontWeight: 'bold', color: '#691A1A' }}>\r\n        {entityLikes.length > 0 ? '+' + entityLikes.length : null}\r\n      </Text>\r\n      <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\r\n        {\r\n          likesToView.map((like) => {\r\n            position += 20;\r\n            return (\r\n              <View key={like.likeId}>\r\n                <Avatar\r\n                  rounded={true}\r\n                  size='small'\r\n                  source={{\r\n                    uri: like.userImage\r\n                  }}\r\n                  containerStyle={{ position: 'absolute', left: position, borderColor: '#F0E6E8', borderWidth: 1 }}\r\n                />\r\n              </View>\r\n            )\r\n          })\r\n        }\r\n      </View>\r\n    </View>\r\n  )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
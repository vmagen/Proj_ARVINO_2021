{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmage\\\\OneDrive\\\\Ruppin\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\Proj_July_RN\\\\FunctionalComponents\\\\FCServices.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport styleSheet from \"../Pages/PageStyle\";\nimport helpers from \"../helpers/helperFunctions\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/native';\nimport { Divider } from 'react-native-paper';\nimport FCWineryAvatar from \"./FCWineryAvatar\";\nimport FCLikes from \"./FCLikes\";\n\nfunction FCServices(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      services = _useState2[0],\n      setServices = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setisLoaded = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    getServices();\n  }, []);\n\n  function getServices() {\n    fetch(helpers.getApi() + 'Service/GetAllServices', {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setServices(result);\n    }).then(function () {\n      setisLoaded(true);\n    }, function (error) {\n      console.log(\"err post=\", error);\n    });\n  }\n\n  if (isLoaded) {\n    return React.createElement(ScrollView, {\n      horizontal: true,\n      pagingEnabled: true,\n      style: [styleSheet.scrollView],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, services.map(function (item) {\n      return React.createElement(View, {\n        key: item.serviceId,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styleSheet.rowEvents,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, React.createElement(FCWineryAvatar, {\n        wineryName: item.wineryName,\n        wineryImage: item.wineryImg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'column',\n          height: 100,\n          alignItems: 'center',\n          marginTop: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, item.serviceName), React.createElement(Text, {\n        numberOfLines: 4,\n        style: {\n          textAlign: 'right'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, item.content)), React.createElement(Image, {\n        source: {\n          uri: helpers.ReturnRandomData(item.images).ImgPath\n        },\n        style: {\n          height: 250\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, React.createElement(FCLikes, {\n        likes: item.likes,\n        entityId: item.serviceId,\n        entityType: 4,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      })));\n    })));\n  } else {\n    return React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    });\n  }\n}\n\nexport default FCServices;","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/Proj_July_RN/FunctionalComponents/FCServices.js"],"names":["React","useState","useEffect","styleSheet","helpers","TouchableOpacity","useNavigation","Divider","FCWineryAvatar","FCLikes","FCServices","props","services","setServices","isLoaded","setisLoaded","navigation","getServices","fetch","getApi","method","headers","Headers","then","res","json","result","error","console","log","scrollView","flexDirection","map","item","serviceId","rowEvents","wineryName","wineryImg","height","alignItems","marginTop","fontWeight","serviceName","textAlign","content","uri","ReturnRandomData","images","ImgPath","likes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, } from 'react';\r\nimport { View, Image, Text, ActivityIndicator, ScrollView } from 'react-native';\r\nimport styleSheet from '../Pages/PageStyle'\r\nimport helpers from '../helpers/helperFunctions';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Divider } from 'react-native-paper';\r\nimport FCWineryAvatar from './FCWineryAvatar';\r\nimport FCLikes from './FCLikes';\r\n\r\nfunction FCServices(props) {\r\n  const [services, setServices] = useState([]);\r\n  const [isLoaded, setisLoaded] = useState(false);\r\n\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    getServices();\r\n  }, []);\r\n\r\n  function getServices() {\r\n    fetch(helpers.getApi() + 'Service/GetAllServices',\r\n      {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json; charset=UTF-8',\r\n          'Accept': 'application/json; charset=UTF-8',\r\n        })\r\n      })\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(\r\n        (result) => {\r\n          setServices(result);\r\n        })\r\n      .then(\r\n        () => { setisLoaded(true) }\r\n        ,\r\n        (error) => {\r\n          console.log(\"err post=\", error);\r\n        });\r\n  }\r\n\r\n  if (isLoaded) {\r\n    return (\r\n      <ScrollView\r\n      horizontal={true}\r\n      pagingEnabled={true}\r\n      style={[styleSheet.scrollView]}>\r\n      <View style={{ flexDirection: 'row' }}>\r\n        {services.map(item => (\r\n          <View key={item.serviceId} >\r\n            <View style={styleSheet.rowEvents} >\r\n              <FCWineryAvatar wineryName={item.wineryName} wineryImage={item.wineryImg} />\r\n              <View style={{ flexDirection: 'column',height: 100, alignItems:'center',  marginTop: 10 }}>\r\n                <Text style={{ fontWeight: 'bold' }}>{item.serviceName}</Text>\r\n                <Text numberOfLines ={4} style={{  textAlign:'right' }}>{item.content}</Text>\r\n              </View>\r\n              <Image\r\n                source={{ uri: helpers.ReturnRandomData(item.images).ImgPath }}\r\n                style={{height: 250}} />\r\n\r\n            </View>\r\n            <View>\r\n              <FCLikes likes={item.likes} entityId={item.serviceId} entityType={4} />\r\n            </View>\r\n          </View>\r\n\r\n        ))}\r\n      </View>\r\n    </ScrollView>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <ActivityIndicator size='large' />\r\n    )\r\n  }\r\n}\r\nexport default FCServices;"]},"metadata":{},"sourceType":"module"}
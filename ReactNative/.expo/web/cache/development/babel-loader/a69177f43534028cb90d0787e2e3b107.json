{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmage\\\\OneDrive\\\\Ruppin\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\Proj_July_RN\\\\FunctionalComponents\\\\FCImagePicker.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Button } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\n\nvar CCGaleryUpload = function (_React$Component) {\n  _inherits(CCGaleryUpload, _React$Component);\n\n  var _super = _createSuper(CCGaleryUpload);\n\n  function CCGaleryUpload(props) {\n    var _this;\n\n    _classCallCheck(this, CCGaleryUpload);\n\n    _this = _super.call(this, props);\n\n    _this.btnOpenGalery = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1\n              }));\n\n            case 2:\n              result = _context.sent;\n\n              if (!result.cancelled) {\n                _this.setState({\n                  photoUri: result.uri\n                }, function () {\n                  return _this.btnUpload();\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.btnUpload = function () {\n      var img = _this.state.photoUri;\n      var imgName = 'imgFromGallery.jpg';\n\n      _this.imageUpload(img, imgName);\n    };\n\n    _this.header = {\n      'Accept': 'application/json',\n      'content-type': 'multipart/form-data'\n    };\n\n    _this.imageUpload = function _callee2(imgUri, picName) {\n      var urlAPI, dataI, config;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              urlAPI = \"https://proj.ruppin.ac.il/bgroup15/prod/uploadpicture/\";\n              dataI = new FormData();\n              console.log('start');\n              dataI.append('picture', {\n                uri: imgUri,\n                name: picName,\n                type: 'image/jpg'\n              });\n              config = {\n                method: 'POST',\n                body: dataI,\n                headers: {\n                  'Accept': \"application/json\",\n                  'Content-Type': 'multipart/form-data'\n                }\n              };\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(fetch(urlAPI, config).then(function (res) {\n                console.log('res.status=', res.status);\n\n                if (res.status == 201) {\n                  return res.json();\n                } else {\n                  console.log('error uploding ...');\n                  return \"err\";\n                }\n              }).then(function (responseData) {\n                console.log(responseData);\n\n                if (responseData != \"err\") {\n                  var picNameWOExt = picName.substring(0, picName.indexOf(\".\"));\n                  var imageNameWithGUID = responseData.substring(responseData.indexOf(picNameWOExt), responseData.indexOf(\".jpg\") + 4);\n\n                  _this.setState({\n                    uplodedPicUri: {\n                      uri: _this.uplodedPicPath + imageNameWithGUID\n                    },\n                    finalPicUri: {\n                      uri: responseData\n                    }\n                  });\n                } else {\n                  console.log('error uploding ...', _this.state.finalPicUri);\n                  alert('error uploding ...');\n                }\n              }).catch(function (err) {\n                alert('err upload= ' + err);\n              }));\n\n            case 7:\n              _this.props.navigation.push(_this.state.myProps.page, {\n                uri: _this.state.finalPicUri.uri\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      photoUri: 't',\n      uplodedPicUri: {\n        uri: 'https://facebook.github.io/react-native/docs/assets/favicon.png'\n      },\n      finalPicUri: {\n        uri: ''\n      },\n      myProps: props.route.params\n    };\n    _this.uplodedPicPath = 'https://proj.ruppin.ac.il/bgroup15/prod/uploadFiles/';\n    return _this;\n  }\n\n  _createClass(CCGaleryUpload, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.btnOpenGalery();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }\n      }, this.state.photoUri && React.createElement(Image, {\n        source: {\n          uri: this.state.photoUri\n        },\n        style: {\n          width: 300,\n          height: 500\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return CCGaleryUpload;\n}(React.Component);\n\nexport { CCGaleryUpload as default };","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/Proj_July_RN/FunctionalComponents/FCImagePicker.js"],"names":["React","Button","ImagePicker","CCGaleryUpload","props","btnOpenGalery","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","setState","photoUri","uri","btnUpload","img","state","imgName","imageUpload","header","imgUri","picName","urlAPI","dataI","FormData","console","log","append","name","type","config","method","body","headers","fetch","then","res","status","json","responseData","picNameWOExt","substring","indexOf","imageNameWithGUID","uplodedPicUri","uplodedPicPath","finalPicUri","alert","catch","err","navigation","push","myProps","page","route","params","flex","alignItems","justifyContent","width","height","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Image, KeyboardAvoidingView } from 'react-native';\r\nimport { Button } from 'react-native-elements';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nexport default class CCGaleryUpload extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      photoUri: 't',\r\n      uplodedPicUri: { uri: 'https://facebook.github.io/react-native/docs/assets/favicon.png' },\r\n      finalPicUri: { uri: '' },\r\n      myProps: props.route.params\r\n    }\r\n\r\n    this.uplodedPicPath = 'https://proj.ruppin.ac.il/bgroup15/prod/uploadFiles/';\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.btnOpenGalery();\r\n  }\r\n\r\n  btnOpenGalery = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    if (!result.cancelled) {\r\n      this.setState({ photoUri: result.uri },\r\n        () => this.btnUpload());\r\n\r\n    }\r\n  };\r\n\r\n  btnUpload = () => {\r\n    let img = this.state.photoUri;\r\n    let imgName = 'imgFromGallery.jpg';\r\n    this.imageUpload(img, imgName);\r\n  };\r\n\r\n  header = {\r\n    'Accept': 'application/json',\r\n    'content-type': 'multipart/form-data',\r\n  }\r\n\r\n  imageUpload = async (imgUri, picName) => {\r\n    let urlAPI = \"https://proj.ruppin.ac.il/bgroup15/prod/uploadpicture/\";\r\n    let dataI = new FormData();\r\n    console.log('start');\r\n    dataI.append('picture', {\r\n      uri: imgUri,\r\n      name: picName,\r\n      type: 'image/jpg'\r\n    });\r\n    const config = {\r\n      method: 'POST',\r\n      body: dataI,\r\n      headers: {\r\n        'Accept': \"application/json\",\r\n        'Content-Type': 'multipart/form-data',\r\n      }\r\n\r\n    };\r\n\r\n    await fetch(urlAPI, config)\r\n      .then((res) => {\r\n        console.log('res.status=', res.status);\r\n        if (res.status == 201) {\r\n          return res.json();\r\n        }\r\n        else {\r\n          console.log('error uploding ...');\r\n          return \"err\";\r\n        }\r\n      })\r\n      .then((responseData) => {\r\n        console.log(responseData);\r\n        if (responseData != \"err\") {\r\n          let picNameWOExt = picName.substring(0, picName.indexOf(\".\"));\r\n          let imageNameWithGUID = responseData.substring(responseData.indexOf(picNameWOExt), responseData.indexOf(\".jpg\") + 4);\r\n          this.setState({\r\n            uplodedPicUri: { uri: this.uplodedPicPath + imageNameWithGUID },\r\n            finalPicUri: { uri: responseData }\r\n          });\r\n        }\r\n        else {\r\n          console.log('error uploding ...', this.state.finalPicUri);\r\n          alert('error uploding ...');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        alert('err upload= ' + err);\r\n      });\r\n\r\n    // console.log(\"final\", this.state.finalPicUri);\r\n    //  console.log(\"props\", this.state.myProps);\r\n    this.props.navigation.push(this.state.myProps.page,\r\n      {\r\n        uri: this.state.finalPicUri.uri\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n        {this.state.photoUri &&\r\n          <Image source={{ uri: this.state.photoUri }} style={{ width: 300, height: 500 }} />\r\n        }\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
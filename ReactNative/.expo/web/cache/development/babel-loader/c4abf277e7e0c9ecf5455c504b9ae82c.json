{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmage\\\\OneDrive\\\\Ruppin\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\Proj_July_RN\\\\FunctionalComponents\\\\FCShare.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Share from \"react-native-web/dist/exports/Share\";\nexport default function FCShare(props) {\n  var onShare = function onShare() {\n    var result;\n    return _regeneratorRuntime.async(function onShare$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Share.share({\n              message: 'React Native | A framework for building native apps using React'\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (result.action === Share.sharedAction) {\n              if (result.activityType) {} else {}\n            } else if (result.action === Share.dismissedAction) {}\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/Proj_July_RN/FunctionalComponents/FCShare.js"],"names":["React","FCShare","props","onShare","Share","share","message","result","action","sharedAction","activityType","dismissedAction","alert"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEnC,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEWC,KAAK,CAACC,KAAN,CAAY;AAC/BC,cAAAA,OAAO,EACL;AAF6B,aAAZ,CAFX;;AAAA;AAEJC,YAAAA,MAFI;;AAMV,gBAAIA,MAAM,CAACC,MAAP,KAAkBJ,KAAK,CAACK,YAA5B,EAA0C;AACxC,kBAAIF,MAAM,CAACG,YAAX,EAAyB,CAExB,CAFD,MAEO,CAEN;AACF,aAND,MAMO,IAAIH,MAAM,CAACC,MAAP,KAAkBJ,KAAK,CAACO,eAA5B,EAA6C,CAEnD;;AAdS;AAAA;;AAAA;AAAA;AAAA;AAgBVC,YAAAA,KAAK,CAAC,YAAMN,OAAP,CAAL;;AAhBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAoBA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGH","sourcesContent":["import React from 'react';\r\nimport {View, Share} from 'react-native';\r\n\r\nexport default function FCShare(props) {\r\n\r\n    const onShare = async () => {\r\n        try {\r\n          const result = await Share.share({\r\n            message:\r\n              'React Native | A framework for building native apps using React',\r\n          });\r\n          if (result.action === Share.sharedAction) {\r\n            if (result.activityType) {\r\n              // shared with activity type of result.activityType\r\n            } else {\r\n              // shared\r\n            }\r\n          } else if (result.action === Share.dismissedAction) {\r\n            // dismissed\r\n          }\r\n        } catch (error) {\r\n          alert(error.message);\r\n        }\r\n      }\r\n\r\n    return (\r\n      <View></View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}